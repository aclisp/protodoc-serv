// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protodoc.proto

package protodoc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ConvertReq struct {
	// proto3 定义的协议内容
	Proto                string   `protobuf:"bytes,1,opt,name=proto,proto3" json:"proto,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConvertReq) Reset()         { *m = ConvertReq{} }
func (m *ConvertReq) String() string { return proto.CompactTextString(m) }
func (*ConvertReq) ProtoMessage()    {}
func (*ConvertReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_253dd10202917d43, []int{0}
}

func (m *ConvertReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConvertReq.Unmarshal(m, b)
}
func (m *ConvertReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConvertReq.Marshal(b, m, deterministic)
}
func (m *ConvertReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConvertReq.Merge(m, src)
}
func (m *ConvertReq) XXX_Size() int {
	return xxx_messageInfo_ConvertReq.Size(m)
}
func (m *ConvertReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ConvertReq.DiscardUnknown(m)
}

var xxx_messageInfo_ConvertReq proto.InternalMessageInfo

func (m *ConvertReq) GetProto() string {
	if m != nil {
		return m.Proto
	}
	return ""
}

type ConvertRes struct {
	// markdown 格式的文档
	Markdown string `protobuf:"bytes,1,opt,name=markdown,proto3" json:"markdown,omitempty"`
	// HTML 格式的文档
	Html                 string   `protobuf:"bytes,2,opt,name=html,proto3" json:"html,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConvertRes) Reset()         { *m = ConvertRes{} }
func (m *ConvertRes) String() string { return proto.CompactTextString(m) }
func (*ConvertRes) ProtoMessage()    {}
func (*ConvertRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_253dd10202917d43, []int{1}
}

func (m *ConvertRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConvertRes.Unmarshal(m, b)
}
func (m *ConvertRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConvertRes.Marshal(b, m, deterministic)
}
func (m *ConvertRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConvertRes.Merge(m, src)
}
func (m *ConvertRes) XXX_Size() int {
	return xxx_messageInfo_ConvertRes.Size(m)
}
func (m *ConvertRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ConvertRes.DiscardUnknown(m)
}

var xxx_messageInfo_ConvertRes proto.InternalMessageInfo

func (m *ConvertRes) GetMarkdown() string {
	if m != nil {
		return m.Markdown
	}
	return ""
}

func (m *ConvertRes) GetHtml() string {
	if m != nil {
		return m.Html
	}
	return ""
}

func init() {
	proto.RegisterType((*ConvertReq)(nil), "protodoc.ConvertReq")
	proto.RegisterType((*ConvertRes)(nil), "protodoc.ConvertRes")
}

func init() {
	proto.RegisterFile("protodoc.proto", fileDescriptor_253dd10202917d43)
}

var fileDescriptor_253dd10202917d43 = []byte{
	// 136 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0xc9, 0x4f, 0xd6, 0x03, 0x33, 0x84, 0x38, 0x60, 0x7c, 0x25, 0x25, 0x2e, 0x2e, 0xe7,
	0xfc, 0xbc, 0xb2, 0xd4, 0xa2, 0x92, 0xa0, 0xd4, 0x42, 0x21, 0x11, 0x2e, 0x56, 0xb0, 0x8c, 0x04,
	0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x84, 0xa3, 0x64, 0x83, 0xa4, 0xa6, 0x58, 0x48, 0x8a, 0x8b,
	0x23, 0x37, 0xb1, 0x28, 0x3b, 0x25, 0xbf, 0x3c, 0x0f, 0xaa, 0x0c, 0xce, 0x17, 0x12, 0xe2, 0x62,
	0xc9, 0x28, 0xc9, 0xcd, 0x91, 0x60, 0x02, 0x8b, 0x83, 0xd9, 0x46, 0x8e, 0x5c, 0x1c, 0x01, 0x20,
	0x63, 0x5c, 0xf2, 0x93, 0x85, 0x4c, 0xb9, 0xd8, 0xa1, 0x26, 0x09, 0x89, 0xe8, 0xc1, 0xdd, 0x84,
	0x70, 0x80, 0x14, 0x36, 0xd1, 0xe2, 0x24, 0x36, 0xb0, 0xa0, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff,
	0x01, 0xfb, 0xe7, 0xba, 0xc7, 0x00, 0x00, 0x00,
}
